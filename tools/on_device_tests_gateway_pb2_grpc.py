# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import on_device_tests_gateway_pb2 as on__device__tests__gateway__pb2


class on_device_tests_gatewayStub(object):
  """Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.exec_command = channel.unary_stream(
        '/on_device_tests_gateway.on_device_tests_gateway/exec_command',
        request_serializer=on__device__tests__gateway__pb2.OnDeviceTestsCommand.SerializeToString,
        response_deserializer=on__device__tests__gateway__pb2.OnDeviceTestsResponse.FromString,
        )
    self.exec_watch_command = channel.unary_stream(
        '/on_device_tests_gateway.on_device_tests_gateway/exec_watch_command',
        request_serializer=on__device__tests__gateway__pb2.OnDeviceTestsWatchCommand.SerializeToString,
        response_deserializer=on__device__tests__gateway__pb2.OnDeviceTestsResponse.FromString,
        )


class on_device_tests_gatewayServicer(object):
  """Interface exported by the server.
  """

  def exec_command(self, request, context):
    """A dumb proxy RPC service that passes user defined command line options
    to the on-device tests gateway and streams back output in real time.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def exec_watch_command(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_on_device_tests_gatewayServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'exec_command': grpc.unary_stream_rpc_method_handler(
          servicer.exec_command,
          request_deserializer=on__device__tests__gateway__pb2.OnDeviceTestsCommand.FromString,
          response_serializer=on__device__tests__gateway__pb2.OnDeviceTestsResponse.SerializeToString,
      ),
      'exec_watch_command': grpc.unary_stream_rpc_method_handler(
          servicer.exec_watch_command,
          request_deserializer=on__device__tests__gateway__pb2.OnDeviceTestsWatchCommand.FromString,
          response_serializer=on__device__tests__gateway__pb2.OnDeviceTestsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'on_device_tests_gateway.on_device_tests_gateway', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
